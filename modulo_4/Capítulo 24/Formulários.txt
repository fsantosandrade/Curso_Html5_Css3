Formulários são utilizados para a criação de campos para o preenchimento de informações.

Anatomia de Formulários:

<form> - tag para a criação de um formulário
(tag qualquer) - Pode-se usar <input>, <select> ou <
<fieldset> - tag para agrupar vários campos
<legend> - tag para dar um título ao fieldset

Métodos de envio de formulários:

Primeiro método: Quando não colocamos método nenhum o padrão é acionado, chamado de método GET, exibindo os dados na url. Utilize quando não estiver solicitando dados sensíveis ou quando você quiser que a url seja compartilhável.

Obs: Quando você envia dados por GET so é possíevl enviar 3000 bytes (letras).

Segundo método: Utilizando o parâmetro "method" e expecificando POST ao invés de GET o método muda, não aparecendo mais na url. Utilize quando solicitar dados sensíveis ou quando precisar que seus formulários enviem fotos ou outros tipos de arquivos.

- INPUTS: São pequenos campos, com diversas funcionalidades para o envio de informações em formulários. Utiliza-se a tag <input> para a criação dos campus de preenchimento e botões junto à tag <label> usada para criar uma relação entre uma palavra e um input (com o id).

Types de Inputs:

* type submit - Para botões de enviar formulários
* type reset - Para botões de limpar os campos preenchidos
* type password - Cria campos que escondem os caracteres digitados
* type text - Campo que aceita valores do tipo strings
* type number - Campo que aceita valores do tipo number apenas
* type month - Cria um campo expecífico para mês e ano
* type date - Cria um campo expecífico para a data completa
* type time - Cria um campo expecífico para as horas e minutos
* type checkbox - Cria uma pequena caixa marcável
* type radio - Cria um pequeno círculo marcável com uma opção marcada (mesmo nome)
* type color - Cria um campo que permite o usuário selecionar uma cor
* type range - Cria uma barra de seleção entre 0 e 100
* type file - Permite o envio de um arquivo (utilize o post)

Parâmetro de Input:

* required - Torna o campo obrigatório
* minlength - Diz o mínimo de caracteres
* maxlength - Diz o máximo de caracteres
* size - Torna o campo do tamanho suficiente para caber x letras
* placeholder - Preenche um campo com uma dica para o usuário
* autocomplete - Delimita a categoria e para que aquele campo será utilizado (TAG FORM)
* step - Diz quanto um número aumenta

- SELECT: São campos que não permitem a digitação e, no lugar, permitem um número de escolhas determinadas. Utiliza-se a tag <select> para a criação junto à tag <option> para a criação das opções.

Obs: A tag <optgroup> também pode ser utilizada para criar pequenos títulos para as opções usando o parâmetro "label".

- DATALIST: Assim como o select as data list listam opções e permitem as escolhas delas, com o diferencial de que permitem também que o usuário digite. Crie normalmente um campo usando input e utilize a tag <datalist> para a criação da lista opcional junto à tag <option> para a criação das opções.

Obs: Dê um id para a datalist e use o parâmetro "list" no input com o id da datalist.

- TEXTAREA: Cria um grande campo que permite o usuário digitar uma grande mensagem de tamanho indeterminado. Utilize a tag <textarea> para a criação do campo.

Obs: Devido o tamanho indeterminado evite utilizar o método get.

- OUTPUT: Serve para mostrar informações na tela, não alteráveis pelo usuário. Utilize a tag <output> junto a um id.

Obs: As informações do output não seram enviadas no envio do formulário, são apenas para a visualização do usuário.